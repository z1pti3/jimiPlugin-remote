{
   "name": "remote",
   "author": "z1p, b1scuit-thi3f, TerrifiedBug, TheCypherGoat",
   "version": 1.50,
   "categories": ["remote","automation"],
   "description": "jimi IT automation framework to carry out remote tasks on workstations, servers, firewalls, swtiches using winRM, SMB, SSH, SCP",
   "icon": null,
   "requirements": {
      "jimi_min_version": null,
      "jimi_max_version": null,
      "plugins": []
   },
   "collections": {},
   "triggers": {
      "remotePullWinEvents": {
         "display_name": "remotePullWinEvents",
         "className": "_remotePullWinEvents",
         "class_location": "models.trigger",
         "description": "",
         "fields": [
            {
               "schema_item": "server",
               "schema_value": "server",
               "type": "input",
               "label": "server",
               "description": ""
            },
            {
               "schema_item": "eventName",
               "schema_value": "eventName",
               "type": "input",
               "label": "eventName",
               "description": ""
            },
            {
               "schema_item": "username",
               "schema_value": "username",
               "type": "input",
               "label": "username",
               "description": ""
            },
            {
               "schema_item": "password",
               "schema_value": "password",
               "type": "input",
               "label": "password",
               "description": ""
            },
            {
               "schema_item": "lastPull",
               "schema_value": "lastPull",
               "type": "input",
               "label": "lastPull",
               "description": ""
            },
            {
               "schema_item": "maxEvents",
               "schema_value": "maxEvents",
               "type": "input",
               "label": "maxEvents",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  }
               }
            }
         }
      }
   },
   "actions": {
      "remoteConnectLinux": {
         "display_name": "remoteConnectLinux",
         "className": "_remoteConnectLinux",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "host",
               "schema_value": "host",
               "type": "input",
               "label": "host",
               "description": ""
            },
            {
               "schema_item": "user",
               "schema_value": "user",
               "type": "input",
               "label": "user",
               "description": ""
            },
            {
               "schema_item": "keyfile",
               "schema_value": "keyfile",
               "type": "input",
               "label": "keyfile",
               "description": ""
            },
            {
               "schema_item": "password",
               "schema_value": "password",
               "type": "input",
               "label": "password",
               "description": ""
            },
            {
               "schema_item": "port",
               "schema_value": "port",
               "type": "input",
               "label": "port",
               "description": ""
            },
            {
               "schema_item": "isPortForward",
               "schema_value": "isPortForward",
               "type": "checkbox",
               "label": "isPortForward",
               "description": ""
            },
            {
               "schema_item": "remote_port",
               "schema_value": "remote_port",
               "type": "input",
               "label": "remote_port",
               "description": ""
            },
            {
               "schema_item": "timeout",
               "schema_value": "timeout",
               "type": "input",
               "label": "timeout",
               "description": ""
            },
            {
               "schema_item": "enable_scp",
               "schema_value": "enable_scp",
               "type": "checkbox",
               "label": "enable_scp",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  }
               }
            },
            "connection_id" : { 
               "description": "Connection ID value for the connection made.",
               "type": "string",
               "always_present": false,
               "values": {
               } 
            }
         }
      },
      "remoteConnectWindows": {
         "display_name": "remoteConnectWindows",
         "className": "_remoteConnectWindows",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "host",
               "schema_value": "host",
               "type": "input",
               "label": "host",
               "description": ""
            },
            {
               "schema_item": "user",
               "schema_value": "user",
               "type": "input",
               "label": "user",
               "description": ""
            },
            {
               "schema_item": "password",
               "schema_value": "password",
               "type": "input",
               "label": "password",
               "description": ""
            },
            {
               "schema_item": "enable_smb",
               "schema_value": "enable_smb",
               "type": "checkbox",
               "label": "enable_smb",
               "description": "Enabled SMB connection as well as winRM. Default is True."
            },
            {
               "schema_item": "check_hostname",
               "schema_value": "check_hostname",
               "type": "group-checkbox",
               "label": "check_hostname",
               "description": "When enabled and hostname is provided the hostname of the system connected to will be checked and compared to the hostname value.",
               "required" : false, 
               "jimi_syntax" : false,
               "group" : 1
            },
            {
               "schema_item": "hostname",
               "schema_value": "hostname",
               "type": "input",
               "label": "hostname",
               "description": "Hostname to compare to the system hostname found.",
               "required" : false, 
               "jimi_syntax" : true,
               "group" : 1
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  }
               }
            },
            "connection_id" : { 
               "description": "Connection ID value for the connection made.",
               "type": "string",
               "always_present": false,
               "values": {
               } 
            }
         }
      },
      "remoteConnectWindowsPSExec": {
         "display_name": "_remoteConnectWindowsPSExec",
         "className": "remoteConnectWindowsPSExec",
         "class_location": "models.action",
         "description": "Connect to a windows system using PSExec method over SMB/RPC.",
         "fields": [
            {
               "schema_item": "host",
               "schema_value": "host",
               "type": "input",
               "label": "host",
               "description": ""
            },
            {
               "schema_item": "user",
               "schema_value": "user",
               "type": "input",
               "label": "user",
               "description": ""
            },
            {
               "schema_item": "password",
               "schema_value": "password",
               "type": "input",
               "label": "password",
               "description": ""
            },
            {
               "schema_item": "use_encryption",
               "schema_value": "use_encryption",
               "type": "checkbox",
               "label": "use_encryption",
               "description": "Requires SMBv3 and enforces encryption."
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  }
               }
            },
            "connection_id" : { 
               "description": "Connection ID value for the connection made.",
               "type": "string",
               "always_present": false,
               "values": {
               } 
            }
         }
      },
      "remoteConnectFortigate": {
         "display_name": "remoteConnectFortigate",
         "className": "_remoteConnectFortigate",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "host",
               "schema_value": "host",
               "type": "input",
               "label": "host",
               "description": ""
            },
            {
               "schema_item": "port",
               "schema_value": "port",
               "type": "input",
               "label": "port",
               "description": ""
            },
            {
               "schema_item": "deviceHostname",
               "schema_value": "deviceHostname",
               "type": "input",
               "label": "deviceHostname",
               "description": ""
            },
            {
               "schema_item": "user",
               "schema_value": "user",
               "type": "input",
               "label": "user",
               "description": ""
            },
            {
               "schema_item": "password",
               "schema_value": "password",
               "type": "input",
               "label": "password",
               "description": ""
            },
            {
               "schema_item": "timeout",
               "schema_value": "timeout",
               "type": "input",
               "label": "timeout",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  }
               }
            },
            "connection_id" : { 
               "description": "Connection ID value for the connection made.",
               "type": "string",
               "always_present": false,
               "values": {
               } 
            }
         }
      },
      "remoteConnectCisco": {
         "display_name": "remoteConnectCisco",
         "className": "_remoteConnectCisco",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "host",
               "schema_value": "host",
               "type": "input",
               "label": "host",
               "description": ""
            },
            {
               "schema_item": "port",
               "schema_value": "port",
               "type": "input",
               "label": "port",
               "description": ""
            },
            {
               "schema_item": "deviceHostname",
               "schema_value": "deviceHostname",
               "type": "input",
               "label": "deviceHostname",
               "description": ""
            },
            {
               "schema_item": "ssh_username",
               "schema_value": "ssh_username",
               "type": "input",
               "label": "ssh_username",
               "description": ""
            },
            {
               "schema_item": "ssh_password",
               "schema_value": "ssh_password",
               "type": "input",
               "label": "ssh_password",
               "description": ""
            },
            {
               "schema_item": "enable_password",
               "schema_value": "enable_password",
               "type": "input",
               "label": "enable_password",
               "description": ""
            },
            {
               "schema_item": "timeout",
               "schema_value": "timeout",
               "type": "input",
               "label": "timeout",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  }
               }
            },
            "connection_id" : { 
               "description": "Connection ID value for the connection made.",
               "type": "string",
               "always_present": false,
               "values": {
               } 
            }
         }
      },
      "remoteDisconnect": {
         "display_name": "remoteDisconnect",
         "className": "_remoteDisconnect",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "connection_id",
               "schema_value": "connection_id",
               "type": "input",
               "label": "connection_id",
               "description": "Connection to use for the action, if blank flowData var remote_connection_id will be used.",
               "required" : false, 
               "jimi_syntax" : true
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  },
                  "255": {
                     "description": "Unable to load connection from connection_id."
                  },
                  "403": {
                     "description": "Failure other."
                  }
               }
            }
         }
      },
      "remoteCommand": {
         "display_name": "remoteCommand",
         "className": "_remoteCommand",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "connection_id",
               "schema_value": "connection_id",
               "type": "input",
               "label": "connection_id",
               "description": "Connection to use for the action, if blank flowData var remote_connection_id will be used.",
               "required" : false, 
               "jimi_syntax" : true
            },
            {
               "schema_item": "command",
               "schema_value": "command",
               "type": "input",
               "label": "command",
               "description": ""
            },
            {
               "schema_item": "arguments",
               "schema_value": "arguments",
               "type": "input-json",
               "label": "arguments",
               "description": ""
            },
            {
               "schema_item": "elevate",
               "schema_value": "elevate",
               "type": "checkbox",
               "label": "elevate",
               "description": ""
            },
            {
               "schema_item": "runAs",
               "schema_value": "runAs",
               "type": "input",
               "label": "runAs",
               "description": ""
            },
            {
               "schema_item": "timeout",
               "schema_value": "timeout",
               "type": "input",
               "label": "timeout",
               "description": ""
            },
            {
               "schema_item": "answerPrompt",
               "schema_value": "answerPrompt",
               "type": "group-checkbox",
               "label": "answerPrompt",
               "description": "",
               "group": 1
            },
            {
               "schema_item": "promptMatch",
               "schema_value": "promptMatch",
               "type": "input",
               "label": "promptMatch",
               "description": "",
               "group": 1
            },
            {
               "schema_item": "promptResponse",
               "schema_value": "promptResponse",
               "type": "input",
               "label": "promptResponse",
               "description": "",
               "group": 1
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  },
                  "255": {
                     "description": "Unable to load connection from connection_id."
                  },
                  "403": {
                     "description": "Failure other."
                  }
               }
            },
            "command" : {
               "description": "Command that was executed.",
               "type": "text",
               "always_present": false,
               "values": {
               }
            }
         }
      },
      "remoteMultiCommand": {
         "display_name": "remoteMultiCommand",
         "className": "_remoteMultiCommand",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "connection_id",
               "schema_value": "connection_id",
               "type": "input",
               "label": "connection_id",
               "description": "Connection to use for the action, if blank flowData var remote_connection_id will be used.",
               "required" : false, 
               "jimi_syntax" : true
            },
            {
               "schema_item": "commands",
               "schema_value": "commands",
               "type": "multiline",
               "label": "commands",
               "description": ""
            },
            {
               "schema_item": "elevate",
               "schema_value": "elevate",
               "type": "checkbox",
               "label": "elevate",
               "description": ""
            },
            {
               "schema_item": "runAs",
               "schema_value": "runAs",
               "type": "input",
               "label": "runAs",
               "description": ""
            },
            {
               "schema_item": "timeout",
               "schema_value": "timeout",
               "type": "input",
               "label": "timeout",
               "description": ""
            },
            {
               "schema_item": "exitOnFailure",
               "schema_value": "exitOnFailure",
               "type": "checkbox",
               "label": "exit on failure",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  },
                  "255": {
                     "description": "Unable to load connection from connection_id."
                  },
                  "403": {
                     "description": "Failure other."
                  }
               }
            }
         }
      },
      "remoteReboot": {
         "display_name": "remoteReboot",
         "className": "_remoteReboot",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "connection_id",
               "schema_value": "connection_id",
               "type": "input",
               "label": "connection_id",
               "description": "Connection to use for the action, if blank flowData var remote_connection_id will be used.",
               "required" : false, 
               "jimi_syntax" : true
            },
            {
               "schema_item": "timeout",
               "schema_value": "timeout",
               "type": "input",
               "label": "timeout",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  },
                  "255": {
                     "description": "Unable to load connection from connection_id."
                  },
                  "403": {
                     "description": "Failure other."
                  }
               }
            }
         }
      },
      "remoteDownload": {
         "display_name": "remoteDownload",
         "className": "_remoteDownload",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "connection_id",
               "schema_value": "connection_id",
               "type": "input",
               "label": "connection_id",
               "description": "Connection to use for the action, if blank flowData var remote_connection_id will be used.",
               "required" : false, 
               "jimi_syntax" : true
            },
            {
               "schema_item": "remoteFile",
               "schema_value": "remoteFile",
               "type": "input",
               "label": "remoteFile",
               "description": ""
            },
            {
               "schema_item": "localFile",
               "schema_value": "localFile",
               "type": "input",
               "label": "localFile",
               "description": ""
            },
            {
               "schema_item": "createMissingFolders",
               "schema_value": "createMissingFolders",
               "type": "checkbox",
               "label": "createMissingFolders",
               "description": ""
            },
            {
               "schema_item": "useStorage",
               "schema_value": "useStorage",
               "type": "checkbox",
               "label": "useStorage",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  },
                  "255": {
                     "description": "Unable to load connection from connection_id."
                  },
                  "403": {
                     "description": "Download failed."
                  }
               }
            }
         }
      },
      "remoteUpload": {
         "display_name": "remoteUpload",
         "className": "_remoteUpload",
         "class_location": "models.action",
         "description": "",
         "fields": [
            {
               "schema_item": "connection_id",
               "schema_value": "connection_id",
               "type": "input",
               "label": "connection_id",
               "description": "Connection to use for the action, if blank flowData var remote_connection_id will be used.",
               "required" : false, 
               "jimi_syntax" : true
            },
            {
               "schema_item": "remoteFile",
               "schema_value": "remoteFile",
               "type": "input",
               "label": "remoteFile",
               "description": ""
            },
            {
               "schema_item": "localFile",
               "schema_value": "localFile",
               "type": "input",
               "label": "localFile",
               "description": ""
            },
            {
               "schema_item": "useStorage",
               "schema_value": "useStorage",
               "type": "checkbox",
               "label": "useStorage",
               "description": ""
            }
         ],
         "data_out": {
            "result": {
               "description": "Returns True when successful.",
               "type": "boolean",
               "always_present": true,
               "values": {
                  "True": {
                     "description": "Successful."
                  },
                  "False": {
                     "description": "Failure."
                  }
               }
            },
            "rc": {
               "description": "Returns the exit code for the action.",
               "type": "number",
               "always_present": true,
               "values": {
                  "0": {
                     "description": "Successful."
                  },
                  "255": {
                     "description": "Unable to load connection from connection_id."
                  },
                  "403": {
                     "description": "Upload failed."
                  },
                  "404": {
                     "description": "Storage file could not be loaded by storage_id."
                  }
               }
            }
         }
      }
   },
   "settings": {}
}